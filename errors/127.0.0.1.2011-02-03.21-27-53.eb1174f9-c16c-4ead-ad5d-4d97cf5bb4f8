(dp1
S'output'
p2
S''
sS'layer'
p3
S'/media/DADOS/Projetos/web2py/applications/flisol_inscricoes/models/db.py'
p4
sS'code'
p5
S'# -*- coding: utf-8 -*-\n# this file is released under public domain and you can use without limitations\n\n#########################################################################\n## This scaffolding model makes your app work on Google App Engine too\n#########################################################################\n\nif request.env.web2py_runtime_gae:            # if running on Google App Engine\n    db = DAL(\'gae://mynamespace\')             # connect to Google BigTable\n    session.connect(request, response, db = db) # and store sessions and tickets there\n    ### or use the following lines to store sessions in Memcache\n    # from gluon.contrib.memdb import MEMDB\n    # from google.appengine.api.memcache import Client\n    # session.connect(request, response, db = MEMDB(Client()))\nelse:                                         # else use a normal relational database\n    db = DAL(\'sqlite://flisol_inscricao.sqlite\')       # if not, use SQLite or other DB\n## if no need for session\n# session.forget()\n\n#########################################################################\n## Here is sample code if you need for\n## - email capabilities\n## - authentication (registration, login, logout, ... )\n## - authorization (role based authorization)\n## - services (xml, csv, json, xmlrpc, jsonrpc, amf, rss)\n## - crud actions\n## (more options discussed in gluon/tools.py)\n#########################################################################\n\nfrom gluon.tools import *\nmail = Mail()                                  # mailer\nauth = Auth(globals(),db)                      # authentication/authorization\ncrud = Crud(globals(),db)                      # for CRUD helpers using auth\nservice = Service(globals())                   # for json, xml, jsonrpc, xmlrpc, amfrpc\nplugins = PluginManager()\n\nmail.settings.server = \'logging\' or \'smtp.gmail.com:587\'  # your SMTP server\nmail.settings.sender = \'you@gmail.com\'         # your email\nmail.settings.login = \'username:password\'      # your credentials or None\n\n# Renomeia as tabelas do modulo de autenticacao e controle de acesso\n#auth.settings.table_user_name = \'usuarios\'\n#auth.settings.table_group_name = \'grupos\'\n#auth.settings.table_membership_name = \'relacionamento\'\n#auth.settings.table_permission_name = \'autorizacao\'\n#auth.settings.table_event_name = \'eventos\'\nauth.settings.hmac_key = \'sha512:1d718a94-81cf-4274-8ac1-42207b203246\'   # before define_tables()\nauth.define_tables()                           # creates all needed tables\nauth.settings.mailer = mail                    # for user email verification\nauth.settings.registration_requires_verification = False\nauth.settings.registration_requires_approval = False\nauth.messages.verify_email = \'Click on the link http://\'+request.env.http_host+URL(r=request,c=\'default\',f=\'user\',args=[\'verify_email\'])+\'/%(key)s to verify your email\'\nauth.settings.reset_password_requires_verification = True\nauth.messages.reset_password = \'Click on the link http://\'+request.env.http_host+URL(r=request,c=\'default\',f=\'user\',args=[\'reset_password\'])+\'/%(key)s to reset your password\'\n\n#########################################################################\n## If you need to use OpenID, Facebook, MySpace, Twitter, Linkedin, etc.\n## register with janrain.com, uncomment and customize following\n# from gluon.contrib.login_methods.rpx_account import RPXAccount\n# auth.settings.actions_disabled=[\'register\',\'change_password\',\'request_reset_password\']\n# auth.settings.login_form = RPXAccount(request, api_key=\'...\',domain=\'...\',\n#    url = "http://localhost:8000/%s/default/user/login" % request.application)\n## other login methods are in gluon/contrib/login_methods\n#########################################################################\n\ncrud.settings.auth = None                      # =auth to enforce authorization on crud\n\n\n"""\nTabela usuarios\n"""\nusuarios = db.define_table(\n    auth.settings.table_user_name,\n    Field(\'nome\', length=128, default=\'\'),\n    Field(\'username\', length = 128, default = \'\', unique = True),\n    Field(\'email\', length=128, default=\'\'),\n    Field(\'password\', \'password\', length=512,\n          readable=False, label=\'Password\'),\n    Field(\'registration_key\', length=512,\n          writable=False, readable=False, default=\'\'),\n    Field(\'reset_password_key\', length=512,\n          writable=False, readable=False, default=\'\'),\n    Field(\'registration_id\', length=512,\n          writable=False, readable=False, default=\'\'))\n\ncustom_auth_table = db[auth.settings.table_user_name] # get the custom_auth_table\ncustom_auth_table.nome.requires = IS_NOT_EMPTY(error_message= T(\'is_empty\'))\ncustom_auth_table.username.requires = [\n            IS_NOT_EMPTY(error_message = T(\'is_empty\')),\n            IS_NOT_IN_DB(db, custom_auth_table.username)\n]\ncustom_auth_table.password.requires = [\n            # Especifica a complexidade da senha\n            # minimo = 6\n            # caracteres especiais = 0 (nenhum)\n            # caracteres em maiusculo = 0 (nenhum)\n            IS_STRONG(min = 6, special = 0, upper = 0),\n            CRYPT()]\ncustom_auth_table.email.requires = [\n            IS_EMAIL(error_message=auth.messages.invalid_email)]\n\n\n"""\nTable Tipo de Atividade\n"""\ntipo_atividade = db.define_table("tipo_atividade",\n      SQLField("tipo", "VARCHAR", length=30, notnull=True, default=None),\n      SQLField("status", "INTEGER", notnull=True, default=\'1\'))\n\n\n"""\nTable Materiais\n"""\nmateriais = db.define_table("materiais",\n      SQLField("material", "VARCHAR", length=40, notnull=True, default=None),\n      SQLField("status", "INTEGER", notnull=True, default=\'1\'))\n\n\n\n"""\nTable curriculo\n"""\ncurriculo = db.define_table("curriculo",\n      SQLField("id_usuarios", usuarios),\n      SQLField("curriculo", "MEDIUMTEXT", notnull=True, default=None))\n\n\n"""\nTabela Atividades\n"""\natividades = db.define_table("atividades",\n      SQLField("id_usuarios", usuarios),\n      SQLField("titulo", "VARCHAR", length=50, notnull=True, default=None),\n      SQLField("descricao", "MEDIUMTEXT", notnull=True, default=None),\n      SQLField("duracao", "TIME", notnull=True, default=None),\n      SQLField("tipo_atividade", tipo_atividade),\n      SQLField("tags", "VARCHAR", notnull=True, default=None),\n      SQLField("up_apresentacao", "VARCHAR", notnull=True, default=None),\n      SQLField("id_materiais", materiais),\n      SQLField("status", "INTEGER", notnull=True, default=\'2\'))\n'
p6
sS'snapshot'
p7
(dp8
S'exception'
p9
(dp10
S'__getslice__'
p11
S"<method-wrapper '__getslice__' of exceptions.SyntaxError object>"
p12
sS'text'
p13
S'None'
p14
sS'__str__'
p15
S"<method-wrapper '__str__' of exceptions.SyntaxError object>"
p16
sS'__reduce__'
p17
S'<built-in method __reduce__ of exceptions.SyntaxError object>'
p18
sS'__dict__'
p19
S'{}'
p20
sS'__sizeof__'
p21
S'<built-in method __sizeof__ of exceptions.SyntaxError object>'
p22
sS'__init__'
p23
S"<method-wrapper '__init__' of exceptions.SyntaxError object>"
p24
sS'__setattr__'
p25
S"<method-wrapper '__setattr__' of exceptions.SyntaxError object>"
p26
sS'__reduce_ex__'
p27
S'<built-in method __reduce_ex__ of exceptions.SyntaxError object>'
p28
sS'__new__'
p29
S'<built-in method __new__ of type object>'
p30
sS'__format__'
p31
S'<built-in method __format__ of exceptions.SyntaxError object>'
p32
sS'__class__'
p33
S"<type 'exceptions.SyntaxError'>"
p34
sS'filename'
p35
S'None'
p36
sS'lineno'
p37
S'None'
p38
sS'msg'
p39
S"'table already defined: auth_user'"
p40
sS'__doc__'
p41
S"'Invalid syntax.'"
p42
sS'__getitem__'
p43
S"<method-wrapper '__getitem__' of exceptions.SyntaxError object>"
p44
sS'__setstate__'
p45
S'<built-in method __setstate__ of exceptions.SyntaxError object>'
p46
sS'__getattribute__'
p47
S"<method-wrapper '__getattribute__' of exceptions.SyntaxError object>"
p48
sS'print_file_and_line'
p49
S'None'
p50
sS'args'
p51
S"('table already defined: auth_user',)"
p52
sS'__subclasshook__'
p53
S'<built-in method __subclasshook__ of type object>'
p54
sS'offset'
p55
S'None'
p56
sS'__unicode__'
p57
S'<built-in method __unicode__ of exceptions.SyntaxError object>'
p58
sS'__delattr__'
p59
S"<method-wrapper '__delattr__' of exceptions.SyntaxError object>"
p60
sS'__repr__'
p61
S"<method-wrapper '__repr__' of exceptions.SyntaxError object>"
p62
sS'__hash__'
p63
S"<method-wrapper '__hash__' of exceptions.SyntaxError object>"
p64
ssS'evalue'
p65
S'table already defined: auth_user'
p66
sS'request'
p67
(dp68
S'function'
p69
S"'index'"
p70
sS'body'
p71
S'<cStringIO.StringO object>'
p72
sS'wsgi'
p73
S"<Storage {'start_response': <function <lambda> a...>, 'HTTP_ACCEPT_ENCODING': 'gzip,deflate,sdch'}}>"
p74
sS'extension'
p75
S"'html'"
p76
sS'vars'
p77
S'<Storage {}>'
p78
sS'cid'
p79
S'None'
p80
sS'url'
p81
S'<gluon.html.XML object>'
p82
sS'raw_extension'
p83
S'None'
p84
sg51
S'[]'
p85
sS'controller'
p86
S"'appadmin'"
p87
sS'cookies'
p88
S"<SimpleCookie: session_id_admin='127.0.0.1-9a39b...'127.0.0.1-75a8c574-33ad-40df-922c-0e8bb53ac4b3'>"
p89
sS'application'
p90
S"'flisol_inscricoes'"
p91
sS'ajax'
p92
S'False'
p93
sS'client'
p94
S"'127.0.0.1'"
p95
sS'env'
p96
S"<Storage {'wsgi_multithread': True, 'http_accept... 'wsgi_run_once': False, 'remote_port': '51916'}>"
p97
sS'raw_args'
p98
S'None'
p99
sS'get_vars'
p100
S'<Storage {}>'
p101
sS'folder'
p102
S"'/media/DADOS/Projetos/web2py/applications/flisol_inscricoes/'"
p103
sS'now'
p104
S'datetime.datetime(2011, 2, 3, 21, 27, 53, 253130)'
p105
sS'post_vars'
p106
S'<Storage {}>'
p107
ssS'frames'
p108
(lp109
(dp110
S'file'
p111
S'/media/DADOS/Projetos/web2py/gluon/restricted.py'
p112
sS'dump'
p113
(dp114
S'environment'
p115
S"{'A': <class 'gluon.html.A'>, 'Auth': <class 'gluon.tools.Auth'>, 'B': <class 'gluon.html.B'>, 'BEAUTIFY': <class 'gluon.html.BEAUTIFY'>, 'BODY': <class 'gluon.html.BODY'>, 'BR': <class 'gluon.html.BR'>, 'CENTER': <class 'gluon.html.CENTER'>, 'CLEANUP': <class 'gluon.validators.CLEANUP'>, 'CODE': <class 'gluon.html.CODE'>, 'CRYPT': <class 'gluon.validators.CRYPT'>, ...}"
p116
sS'ccode'
p117
S'<code object <module> at 0x2c97828, file "/media...ications/flisol_inscricoes/models/db.py", line 8>'
p118
ssS'lnum'
p119
I188
sS'lines'
p120
(dp121
I192
S'        # XXX Show exception in Wing IDE if running in debugger'
p122
sI183
S'        if type(code) == types.CodeType:'
p123
sI184
S'            ccode = code'
p124
sI185
S'        else:'
p125
sI186
S'            ccode = compile2(code,layer)'
p126
sI187
S''
sI188
S'        exec ccode in environment'
p127
sI189
S'    except HTTP:'
p128
sI190
S'        raise'
p129
sI191
S'    except Exception:'
p130
ssS'call'
p131
S'(code=\'# -*- coding: utf-8 -*-\\n# this file is released ..."status", "INTEGER", notnull=True, default=\\\'2\\\'))\\n\', environment={\'A\': <class \'gluon.html.A\'>, \'Auth\': <class \'gluon.tools.Auth\'>, \'B\': <class \'gluon.html.B\'>, \'BEAUTIFY\': <class \'gluon.html.BEAUTIFY\'>, \'BODY\': <class \'gluon.html.BODY\'>, \'BR\': <class \'gluon.html.BR\'>, \'CENTER\': <class \'gluon.html.CENTER\'>, \'CLEANUP\': <class \'gluon.validators.CLEANUP\'>, \'CODE\': <class \'gluon.html.CODE\'>, \'CRYPT\': <class \'gluon.validators.CRYPT\'>, ...}, layer=\'/media/DADOS/Projetos/web2py/applications/flisol_inscricoes/models/db.py\')'
p132
sS'func'
p133
S'restricted'
p134
sa(dp135
g111
S'/media/DADOS/Projetos/web2py/applications/flisol_inscricoes/models/db.py'
p136
sg113
(dp137
S'writable'
p138
S'undefined'
p139
sS'default'
p140
g139
sS'readable'
p141
g139
sS'builtinFalse'
p142
g93
ssg119
I84
sg120
(dp143
I79
S"    Field('registration_key', length=512,"
p144
sI80
S"          writable=False, readable=False, default=''),"
p145
sI81
S"    Field('reset_password_key', length=512,"
p146
sI82
S"          writable=False, readable=False, default=''),"
p147
sI83
S"    Field('registration_id', length=512,"
p148
sI84
S"          writable=False, readable=False, default=''))"
p149
sI85
S''
sI86
S'custom_auth_table = db[auth.settings.table_user_name] # get the custom_auth_table'
p150
sI87
S"custom_auth_table.nome.requires = IS_NOT_EMPTY(error_message= T('is_empty'))"
p151
sI88
S'custom_auth_table.username.requires = ['
p152
ssg131
S'()'
p153
sg133
S'<module>'
p154
sa(dp155
g111
S'/media/DADOS/Projetos/web2py/gluon/dal.py'
p156
sg113
(dp157
S'tablename'
p158
S"'auth_user'"
p159
sS'builtinSyntaxError'
p160
S"<type 'exceptions.SyntaxError'>"
p161
ssg119
I3410
sg120
(dp162
I3405
S"        primarykey=args.get('primarykey',None)"
p163
sI3406
S"        polymodel=args.get('polymodel',None)"
p164
sI3407
S'        tablename = cleanup(tablename)'
p165
sI3408
S''
sI3409
S'        if tablename in self.tables or hasattr(self,tablename):'
p166
sI3410
S"            raise SyntaxError, 'table already defined: %s' % tablename"
p167
sI3411
S"        if tablename.startswith('_'):"
p168
sI3412
S"            raise SyntaxError, 'invalid table name: %s' % tablename"
p169
sI3413
S'        if self.check_reserved:'
p170
sI3414
S'            self.check_reserved_keyword(tablename)'
p171
ssg131
S"(self=<DAL {'auth_permission': <Table {'ALL': <gluon.d...0x2837810>}>, '_migrate': True, '_pool_size': 0}>, tablename='auth_user', *fields=(<gluon.dal.Field object>, <gluon.dal.Field object>, <gluon.dal.Field object>, <gluon.dal.Field object>, <gluon.dal.Field object>, <gluon.dal.Field object>, <gluon.dal.Field object>), **args={})"
p172
sg133
S'define_table'
p173
sasS'pyver'
p174
S'Python 2.6.6: /usr/bin/python'
p175
sS'session'
p176
(dp177
S'auth'
p178
S'None'
p179
ssS'etype'
p180
S"<type 'exceptions.SyntaxError'>"
p181
sS'date'
p182
S'Thu Feb  3 21:27:53 2011'
p183
sS'response'
p184
(dp185
S'status'
p186
S'200'
p187
sg71
S'<cStringIO.StringO object>'
p188
sg88
S"<SimpleCookie: session_id_flisol_inscricoes='127.0.0.1-4d3baf6b-277f-44b1-9140-197f22a72c1e'>"
p189
sS'_vars'
p190
S'None'
p191
sS'menu'
p192
S'[]'
p193
sS'flash'
p194
S"''"
p195
sS'_custom_rollback'
p196
S'None'
p197
sS'session_id'
p198
S"'127.0.0.1-4d3baf6b-277f-44b1-9140-197f22a72c1e'"
p199
sS'headers'
p200
S"<Storage {'Expires': 'Thu, 03 Feb 2011 23:27:53 ...he, must-revalidate, post-check=0, pre-check=0'}>"
p201
sS'meta'
p202
S'<Storage {}>'
p203
sS'session_filename'
p204
S"'/media/DADOS/Projetos/web2py/applications/flisol...ns/127.0.0.1-4d3baf6b-277f-44b1-9140-197f22a72c1e'"
p205
sS'postprocessing'
p206
S'[]'
p207
sS'session_file'
p208
S"<open file '/media/DADOS/Projetos/web2py/applica...d3baf6b-277f-44b1-9140-197f22a72c1e', mode 'rb+'>"
p209
sS'_view_environment'
p210
S"{'A': <class 'gluon.html.A'>, 'B': <class 'gluon.html.B'>, 'BEAUTIFY': <class 'gluon.html.BEAUTIFY'>, 'BODY': <class 'gluon.html.BODY'>, 'BR': <class 'gluon.html.BR'>, 'CENTER': <class 'gluon.html.CENTER'>, 'CLEANUP': <class 'gluon.validators.CLEANUP'>, 'CODE': <class 'gluon.html.CODE'>, 'CRYPT': <class 'gluon.validators.CRYPT'>, 'DAL': <class 'gluon.dal.DAL'>, ...}"
p211
sS'session_id_name'
p212
S"'session_id_flisol_inscricoes'"
p213
sS'_custom_commit'
p214
S'None'
p215
sS'_caller'
p216
S'<function <lambda>>'
p217
sS'files'
p218
S'[]'
p219
sS'view'
p220
S"'appadmin/index.html'"
p221
ssS'locals'
p222
(dp223
S'polymodel'
p224
S'None'
p225
sS'format'
p226
S'None'
p227
sS'migrate'
p228
S'True'
p229
sS'fields'
p230
S'(<gluon.dal.Field object>, <gluon.dal.Field object>, <gluon.dal.Field object>, <gluon.dal.Field object>, <gluon.dal.Field object>, <gluon.dal.Field object>, <gluon.dal.Field object>)'
p231
sS'sequence_name'
p232
S'None'
p233
sg51
g20
sS'tablename'
p234
S"'auth_user'"
p235
sS'fake_migrate'
p236
g93
sS'primarykey'
p237
S'None'
p238
sS'trigger_name'
p239
S'None'
p240
sS'self'
p241
S"<DAL {'auth_permission': <Table {'ALL': <gluon.d...0x2837810>}>, '_migrate': True, '_pool_size': 0}>"
p242
sssS'traceback'
p243
S'Traceback (most recent call last):\n  File "/media/DADOS/Projetos/web2py/gluon/restricted.py", line 188, in restricted\n    exec ccode in environment\n  File "/media/DADOS/Projetos/web2py/applications/flisol_inscricoes/models/db.py", line 84, in <module>\n    writable=False, readable=False, default=\'\'))\n  File "/media/DADOS/Projetos/web2py/gluon/dal.py", line 3410, in define_table\n    raise SyntaxError, \'table already defined: %s\' % tablename\nSyntaxError: table already defined: auth_user\n'
p244
s.